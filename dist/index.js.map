{
  "version": 3,
  "sources": ["../lib/accessors.js", "../lib/ndarray.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the variance of a strided array using a one-pass textbook algorithm.\n*\n* @private\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} variance\n*\n* @example\n* var toAccessorArray = require( '@stdlib/array-base-to-accessor-array' );\n* var arraylike2object = require( '@stdlib/array-base-arraylike2object' );\n*\n* var x = toAccessorArray( [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ] );\n*\n* var v = variancetk( 4, 1, arraylike2object( x ), 2, 1 );\n* // returns 6.25\n*/\nfunction variancetk( N, correction, x, strideX, offsetX ) {\n\tvar xbuf;\n\tvar get;\n\tvar S2;\n\tvar ix;\n\tvar S;\n\tvar v;\n\tvar n;\n\tvar i;\n\n\t// Cache reference to array data:\n\txbuf = x.data;\n\n\t// Cache a reference to the element accessor:\n\tget = x.accessors[ 0 ];\n\n\tn = N - correction;\n\tix = offsetX;\n\tS2 = 0.0;\n\tS = 0.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv = get( xbuf, ix );\n\t\tS2 += v * v;\n\t\tS += v;\n\t\tix += strideX;\n\t}\n\treturn (S2 - ((S/N)*S)) / n;\n}\n\n\n// EXPORTS //\n\nmodule.exports = variancetk;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arraylike2object = require( '@stdlib/array-base-arraylike2object' );\nvar accessors = require( './accessors.js' );\n\n\n// MAIN //\n\n/**\n* Computes the variance of a strided array using a one-pass textbook algorithm.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} variance\n*\n* @example\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n*\n* var v = variancetk( 4, 1, x, 2, 1 );\n* // returns 6.25\n*/\nfunction variancetk( N, correction, x, strideX, offsetX ) {\n\tvar S2;\n\tvar ix;\n\tvar o;\n\tvar S;\n\tvar v;\n\tvar n;\n\tvar i;\n\n\tn = N - correction;\n\tif ( N <= 0 || n <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || strideX === 0 ) {\n\t\treturn 0.0;\n\t}\n\to = arraylike2object( x );\n\tif ( o.accessorProtocol ) {\n\t\treturn accessors( N, correction, o, strideX, offsetX );\n\t}\n\tix = offsetX;\n\tS2 = 0.0;\n\tS = 0.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv = x[ ix ];\n\t\tS2 += v * v;\n\t\tS += v;\n\t\tix += strideX;\n\t}\n\treturn (S2 - ((S/N)*S)) / n;\n}\n\n\n// EXPORTS //\n\nmodule.exports = variancetk;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar stride2offset = require( '@stdlib/strided-base-stride2offset' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\n/**\n* Computes the variance of a strided array using a one-pass textbook algorithm.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} strideX - stride length\n* @returns {number} variance\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n*\n* var v = variancetk( x.length, 1, x, 1 );\n* // returns ~4.3333\n*/\nfunction variancetk( N, correction, x, strideX ) {\n\treturn ndarray( N, correction, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = variancetk;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the variance of a strided array using a one-pass textbook algorithm.\n*\n* @module @stdlib/stats-strided-variancetk\n*\n* @example\n* var variancetk = require( '@stdlib/stats-strided-variancetk' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n*\n* var v = variancetk( x.length, 1, x, 1 );\n* // returns ~4.3333\n*\n* @example\n* var variancetk = require( '@stdlib/stats-strided-variancetk' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n*\n* var v = variancetk.ndarray( 4, 1, x, 2, 1 );\n* // returns 6.25\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n\n// exports: { \"ndarray\": \"main.ndarray\" }\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cA4CA,SAASC,EAAYC,EAAGC,EAAYC,EAAGC,EAASC,EAAU,CACzD,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAYJ,IATAP,EAAOH,EAAE,KAGTI,EAAMJ,EAAE,UAAW,CAAE,EAErBS,EAAIX,EAAIC,EACRO,EAAKJ,EACLG,EAAK,EACLE,EAAI,EACEG,EAAI,EAAGA,EAAIZ,EAAGY,IACnBF,EAAIJ,EAAKD,EAAMG,CAAG,EAClBD,GAAMG,EAAIA,EACVD,GAAKC,EACLF,GAAML,EAEP,OAAQI,EAAOE,EAAET,EAAGS,GAAME,CAC3B,CAKAb,EAAO,QAAUC,IC5EjB,IAAAc,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAmB,QAAS,qCAAsC,EAClEC,EAAY,IAqBhB,SAASC,EAAYC,EAAGC,EAAYC,EAAGC,EAASC,EAAU,CACzD,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGJ,GADAD,EAAIV,EAAIC,EACHD,GAAK,GAAKU,GAAK,EACnB,MAAO,KAER,GAAKV,IAAM,GAAKG,IAAY,EAC3B,MAAO,GAGR,GADAI,EAAIV,EAAkBK,CAAE,EACnBK,EAAE,iBACN,OAAOT,EAAWE,EAAGC,EAAYM,EAAGJ,EAASC,CAAQ,EAKtD,IAHAE,EAAKF,EACLC,EAAK,EACLG,EAAI,EACEG,EAAI,EAAGA,EAAIX,EAAGW,IACnBF,EAAIP,EAAGI,CAAG,EACVD,GAAMI,EAAIA,EACVD,GAAKC,EACLH,GAAMH,EAEP,OAAQE,EAAOG,EAAER,EAAGQ,GAAME,CAC3B,CAKAd,EAAO,QAAUG,IC/EjB,IAAAa,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,oCAAqC,EAC9DC,EAAU,IAoBd,SAASC,EAAYC,EAAGC,EAAYC,EAAGC,EAAU,CAChD,OAAOL,EAASE,EAAGC,EAAYC,EAAGC,EAASN,EAAeG,EAAGG,CAAQ,CAAE,CACxE,CAKAP,EAAO,QAAUG,ICNjB,IAAIK,EAAc,QAAS,uDAAwD,EAC/EC,EAAO,IACPC,EAAU,IAKdF,EAAaC,EAAM,UAAWC,CAAQ,EAKtC,OAAO,QAAUD",
  "names": ["require_accessors", "__commonJSMin", "exports", "module", "variancetk", "N", "correction", "x", "strideX", "offsetX", "xbuf", "get", "S2", "ix", "S", "v", "n", "i", "require_ndarray", "__commonJSMin", "exports", "module", "arraylike2object", "accessors", "variancetk", "N", "correction", "x", "strideX", "offsetX", "S2", "ix", "o", "S", "v", "n", "i", "require_main", "__commonJSMin", "exports", "module", "stride2offset", "ndarray", "variancetk", "N", "correction", "x", "strideX", "setReadOnly", "main", "ndarray"]
}
