{"version":3,"file":"index.mjs","sources":["../lib/ndarray.js","../lib/accessors.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from '@stdlib/array-base-arraylike2object';\nimport accessors from './accessors.js';\n\n\n// MAIN //\n\n/**\n* Computes the variance of a strided array using a one-pass textbook algorithm.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} variance\n*\n* @example\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n*\n* var v = variancetk( 4, 1, x, 2, 1 );\n* // returns 6.25\n*/\nfunction variancetk( N, correction, x, strideX, offsetX ) {\n\tvar S2;\n\tvar ix;\n\tvar o;\n\tvar S;\n\tvar v;\n\tvar n;\n\tvar i;\n\n\tn = N - correction;\n\tif ( N <= 0 || n <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || strideX === 0 ) {\n\t\treturn 0.0;\n\t}\n\to = arraylike2object( x );\n\tif ( o.accessorProtocol ) {\n\t\treturn accessors( N, correction, o, strideX, offsetX );\n\t}\n\tix = offsetX;\n\tS2 = 0.0;\n\tS = 0.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv = x[ ix ];\n\t\tS2 += v * v;\n\t\tS += v;\n\t\tix += strideX;\n\t}\n\treturn (S2 - ((S/N)*S)) / n;\n}\n\n\n// EXPORTS //\n\nexport default variancetk;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the variance of a strided array using a one-pass textbook algorithm.\n*\n* @private\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} variance\n*\n* @example\n* import toAccessorArray from '@stdlib/array-base-to-accessor-array';\n* import arraylike2object from '@stdlib/array-base-arraylike2object';\n*\n* var x = toAccessorArray( [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ] );\n*\n* var v = variancetk( 4, 1, arraylike2object( x ), 2, 1 );\n* // returns 6.25\n*/\nfunction variancetk( N, correction, x, strideX, offsetX ) {\n\tvar xbuf;\n\tvar get;\n\tvar S2;\n\tvar ix;\n\tvar S;\n\tvar v;\n\tvar n;\n\tvar i;\n\n\t// Cache reference to array data:\n\txbuf = x.data;\n\n\t// Cache a reference to the element accessor:\n\tget = x.accessors[ 0 ];\n\n\tn = N - correction;\n\tix = offsetX;\n\tS2 = 0.0;\n\tS = 0.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv = get( xbuf, ix );\n\t\tS2 += v * v;\n\t\tS += v;\n\t\tix += strideX;\n\t}\n\treturn (S2 - ((S/N)*S)) / n;\n}\n\n\n// EXPORTS //\n\nexport default variancetk;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport stride2offset from '@stdlib/strided-base-stride2offset';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\n/**\n* Computes the variance of a strided array using a one-pass textbook algorithm.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} strideX - stride length\n* @returns {number} variance\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n*\n* var v = variancetk( x.length, 1, x, 1 );\n* // returns ~4.3333\n*/\nfunction variancetk( N, correction, x, strideX ) {\n\treturn ndarray( N, correction, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nexport default variancetk;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the variance of a strided array using a one-pass textbook algorithm.\n*\n* @module @stdlib/stats-strided-variancetk\n*\n* @example\n* import variancetk from '@stdlib/stats-strided-variancetk';\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n*\n* var v = variancetk( x.length, 1, x, 1 );\n* // returns ~4.3333\n*\n* @example\n* import variancetk from '@stdlib/stats-strided-variancetk';\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n*\n* var v = variancetk.ndarray( 4, 1, x, 2, 1 );\n* // returns 6.25\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n\n// exports: { \"ndarray\": \"main.ndarray\" }\n"],"names":["variancetk","N","correction","x","strideX","offsetX","S2","ix","o","S","v","n","i","NaN","arraylike2object","accessorProtocol","xbuf","get","data","accessors","ndarray","stride2offset","setReadOnly","main"],"mappings":";;mUA4CA,SAASA,EAAYC,EAAGC,EAAYC,EAAGC,EAASC,GAC/C,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGJ,GADAD,EAAIV,EAAIC,EACHD,GAAK,GAAKU,GAAK,EACnB,OAAOE,IAER,GAAW,IAANZ,GAAuB,IAAZG,EACf,OAAO,EAGR,IADAI,EAAIM,EAAkBX,IACfY,iBACN,OClBF,SAAqBd,EAAGC,EAAYC,EAAGC,EAASC,GAC/C,IAAIW,EACAC,EACAX,EACAC,EACAE,EACAC,EACAC,EACAC,EAYJ,IATAI,EAAOb,EAAEe,KAGTD,EAAMd,EAAEgB,UAAW,GAEnBR,EAAIV,EAAIC,EACRK,EAAKF,EACLC,EAAK,EACLG,EAAI,EACEG,EAAI,EAAGA,EAAIX,EAAGW,IAEnBN,IADAI,EAAIO,EAAKD,EAAMT,IACLG,EACVD,GAAKC,EACLH,GAAMH,EAEP,OAAQE,EAAOG,EAAER,EAAGQ,GAAME,CAC3B,CDTSQ,CAAWlB,EAAGC,EAAYM,EAAGJ,EAASC,GAK9C,IAHAE,EAAKF,EACLC,EAAK,EACLG,EAAI,EACEG,EAAI,EAAGA,EAAIX,EAAGW,IAEnBN,IADAI,EAAIP,EAAGI,IACGG,EACVD,GAAKC,EACLH,GAAMH,EAEP,OAAQE,EAAOG,EAAER,EAAGQ,GAAME,CAC3B,CE/BA,SAASX,EAAYC,EAAGC,EAAYC,EAAGC,GACtC,OAAOgB,EAASnB,EAAGC,EAAYC,EAAGC,EAASiB,EAAepB,EAAGG,GAC9D,CCMAkB,EAAAC,EAAA,UAAAH"}